/********************************************************** *
*  EXTRAER CLASIFICACIÓN POR EDADES y NOTA DE UNA PELÍCULA  *
*                    www.themoviedb.com                     *
*********************************************************** */

api_key = "ca2eed3342d9bb5049dcf258f020a131";    //Poner la clave de API de la cuenta.
base_uri = "http://api.themoviedb.org/3";        //ACCESO API
cert_NA = "NA";                                  //CLASIFICACIÓN NO DISPONIBLE. Ni ES ni US.

//EJECUTAR ESTA FUNCIÓN
function getDatos() {
    try{
      var ss = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
      call(ss,
        function(e){
          Logger.log("Success: " + e);
        }, 
        function(e){
          Logger.log("Error: " + e);
        }
      );
    } catch (e) {    
      Logger.log(e.toString());    
    }
}

function call(ss, success, error){
  for (row = 1; row < ss.getLastRow() + 1; row++) {
    var movieUrl = ss.getRange(row, 1).getValue();
    Logger.log(movieUrl);
    var movieId = movieUrl.replace("https://www.themoviedb.org/movie/","").split("?")[0].split("-")[0];
    Logger.log(movieId);
    var finalUrl = "https://api.themoviedb.org/3/movie/" + movieId + "?api_key=" + api_key + "&append_to_response=release_dates";
    var options = {
      'contentType': 'application/json',
    }
    
    var cert = cert_NA;
    try {
      var response = UrlFetchApp.fetch(finalUrl,options);
      getRatings(response,ss,row);
      var releaseDates = JSON.parse(response)["release_dates"];
      if(releaseDates) {
        var certs = releaseDates["results"];
        var certMap = getCertifications(certs);
        var cert_ES = certMap["ES"];
        var cert_US = certMap["US"];
        cert = cert_ES != undefined ? cert_ES : cert_US != undefined ? cert_US : certMap[Object.keys(certMap)[0]];
        Logger.log("Clasificación edades ES --> " + JSON.stringify(cert_ES));
        Logger.log("Clasificación edades US --> " + JSON.stringify(cert_US));
        Logger.log("Clasificación edades --> " + JSON.stringify(cert));
      } else {
        Logger.log("Película no encontrada o clasificación por edades no disponible.");
      }
    } catch (e) {
      Logger.log(e);
    } finally {
      ss.getRange(row, 2).setValue(cert);
    }
  }
}

function getCertifications(certs) {
  var array_certs = certs.filter(function(i) {
    return i.iso_3166_1 !== "" ? i.release_dates : false;
  });
  var certMap = {};
  array_certs.forEach(function(i) {
    var temp_cert = i.release_dates.filter(function(j) {
      return j.certification != "" ? j.certification : false;
    })[0];
    var cert = temp_cert != undefined ? temp_cert["certification"] : null;
    if(cert) {
      certMap[i.iso_3166_1] = i.release_dates.filter(function(j) {
        return j.certification != "" ? j.certification : false;
      })[0]["certification"];
    }
  });
  return certMap;
}

function getRatings(response, ss, row){
  var rating = 'NA';
  try {
    rating = JSON.parse(response)["vote_average"];
    Logger.log("Nota --> " + JSON.stringify(rating));
  } catch (e) {
    Logger.log(e);
  } finally {
    ss.getRange(row, 3).setValue(rating);
  }
}
